#!/usr/bin/env python3

from config import *
import board
import w1thermsensor
import neopixel
import adafruit_bme280.advanced as adafruit_bme280
import busio

sensor = w1thermsensor.W1ThermSensor()
i2c = busio.I2C(board.SCL, board.SDA)


def leds_shine(r, g, b):
    pixels = neopixel.NeoPixel(board.D18, 8, brightness=1.0 / 32, auto_write=False)

    pixels.fill((r, g, b))
    pixels.show()


def ds18b20():
    return sensor.get_temperature()


def ds18b20():
    temp = sensor.get_temperature()
    print(f"\nDS18B200 Temp : {temp} " + chr(176) + "C")

    return temp


def bme280():
    bme280 = adafruit_bme280.Adafruit_BME280_I2C(i2c, 0x76)
    bme280.sea_level_pressure = 1013.25
    bme280.standby_period = adafruit_bme280.STANDBY_TC_500
    bme280.iir_filter = adafruit_bme280.IIR_FILTER_X16
    bme280.overscan_pressure = adafruit_bme280.OVERSCAN_X16
    bme280.overscan_humidity = adafruit_bme280.OVERSCAN_X1
    bme280.overscan_temperature = adafruit_bme280.OVERSCAN_X2

    print("\nBME280:")
    print(f"Temperature: {bme280.temperature:0.1f} " + chr(176) + "C")
    print(f"Humidity: {bme280.humidity:0.1f} %")
    print(f"Pressure: {bme280.pressure:0.1f} hPa")
    print(f"Altitude: {bme280.altitude:0.2f} meters")

    return bme280.temperature


if __name__ == "__main__":
    while True:
        temp = (ds18b20() + bme280()) / 2
        if temp > 21:
            leds_shine(255, 0, 0)
        elif temp < 20:
            leds_shine(0, 0, 255)
        else:
            leds_shine(0, 255, 0)
